Start training
DataParallel(
  (module): Sequential(
    (V1): Sequential(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (nonlin1): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (norm2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (nonlin2): ReLU(inplace=True)
      (output): Identity()
    )
    (V2): CORblock_S(
      (conv_input): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (skip): Conv2d(128, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (norm_skip): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (nonlin1): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (nonlin2): ReLU(inplace=True)
      (conv3): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (nonlin3): ReLU(inplace=True)
      (output): Identity()
      (norm1_0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2_0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm3_0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm1_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (V4): CORblock_S(
      (conv_input): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (skip): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (norm_skip): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (nonlin1): ReLU(inplace=True)
      (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (nonlin2): ReLU(inplace=True)
      (conv3): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (nonlin3): ReLU(inplace=True)
      (output): Identity()
      (norm1_0): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2_0): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm3_0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm1_1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2_1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm3_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm1_2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2_2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm3_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm1_3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2_3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm3_3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (IT): CORblock_S(
      (conv_input): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (skip): Conv2d(512, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (norm_skip): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (nonlin1): ReLU(inplace=True)
      (conv2): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (nonlin2): ReLU(inplace=True)
      (conv3): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (nonlin3): ReLU(inplace=True)
      (output): Identity()
      (norm1_0): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2_0): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm3_0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm1_1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2_1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm3_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (decoder): Sequential(
      (avgpool): AdaptiveAvgPool2d(output_size=1)
      (flatten): Flatten()
      (linear): Linear(in_features=512, out_features=100, bias=True)
      (output): Identity()
    )
  )
)

train: {'loss': 4.837890148162842, 'top1': 0.0, 'top5': 0.03125, 'learning_rate': 0.1, 'dur': 44.56482768058777, 'data_load_dur': nan}

val: {'loss': 103.41341944880429, 'top1': 0.01, 'top5': 0.0488, 'dur': 0.14026101987073375}

train: {'loss': 4.178096771240234, 'top1': 0.0625, 'top5': 0.15625, 'learning_rate': 0.1, 'dur': 0.4530346393585205, 'data_load_dur': 0.00045180320739746094}

val: {'loss': 4.074840762329101, 'top1': 0.0838, 'top5': 0.2754, 'dur': 0.12932536556462573}

train: {'loss': 3.1822123527526855, 'top1': 0.1875, 'top5': 0.53125, 'learning_rate': 0.1, 'dur': 0.14090704917907715, 'data_load_dur': nan}

val: {'loss': 3.6653279426574708, 'top1': 0.1404, 'top5': 0.3782, 'dur': 0.13012232901943718}

train: {'loss': 3.424914836883545, 'top1': 0.1875, 'top5': 0.34375, 'learning_rate': 0.1, 'dur': 0.4545159339904785, 'data_load_dur': 0.00043582916259765625}

val: {'loss': 3.282041403961182, 'top1': 0.207, 'top5': 0.476, 'dur': 0.1293046793360619}

train: {'loss': 3.0393784046173096, 'top1': 0.28125, 'top5': 0.5, 'learning_rate': 0.1, 'dur': 0.14285731315612793, 'data_load_dur': nan}

val: {'loss': 3.0628765789031984, 'top1': 0.2584, 'top5': 0.538, 'dur': 0.12939991465040074}

train: {'loss': 2.985222339630127, 'top1': 0.15625, 'top5': 0.5625, 'learning_rate': 0.1, 'dur': 0.453869104385376, 'data_load_dur': 0.000576019287109375}

val: {'loss': 2.939142420196533, 'top1': 0.2842, 'top5': 0.5728, 'dur': 0.12931717125473507}

train: {'loss': 2.832486391067505, 'top1': 0.34375, 'top5': 0.59375, 'learning_rate': 0.1, 'dur': 0.1426398754119873, 'data_load_dur': nan}

val: {'loss': 2.806280549240112, 'top1': 0.3158, 'top5': 0.6018, 'dur': 0.12972281692893642}

train: {'loss': 2.879667043685913, 'top1': 0.25, 'top5': 0.71875, 'learning_rate': 0.1, 'dur': 0.45513415336608887, 'data_load_dur': 0.0004391670227050781}

val: {'loss': 2.921368696975708, 'top1': 0.2904, 'top5': 0.5774, 'dur': 0.1297455289561278}

train: {'loss': 2.3231987953186035, 'top1': 0.46875, 'top5': 0.625, 'learning_rate': 0.1, 'dur': 0.13755464553833008, 'data_load_dur': nan}

val: {'loss': 2.6026503787994386, 'top1': 0.3658, 'top5': 0.6476, 'dur': 0.12946002042976915}

train: {'loss': 2.487633228302002, 'top1': 0.34375, 'top5': 0.625, 'learning_rate': 0.1, 'dur': 0.45488691329956055, 'data_load_dur': 0.00038886070251464844}

val: {'loss': 2.4791725376129152, 'top1': 0.3882, 'top5': 0.6708, 'dur': 0.12960057046003404}

train: {'loss': 2.4239304065704346, 'top1': 0.40625, 'top5': 0.75, 'learning_rate': 0.1, 'dur': 0.1402418613433838, 'data_load_dur': nan}

val: {'loss': 2.6185443363189695, 'top1': 0.3674, 'top5': 0.6544, 'dur': 0.1293470920271175}

train: {'loss': 2.7265536785125732, 'top1': 0.34375, 'top5': 0.65625, 'learning_rate': 0.1, 'dur': 0.45196962356567383, 'data_load_dur': 0.0003707408905029297}

val: {'loss': 2.573264500808716, 'top1': 0.373, 'top5': 0.6742, 'dur': 0.12927715793536726}

train: {'loss': 2.839240312576294, 'top1': 0.21875, 'top5': 0.65625, 'learning_rate': 0.1, 'dur': 0.140669584274292, 'data_load_dur': nan}

val: {'loss': 2.345807142829895, 'top1': 0.4132, 'top5': 0.7028, 'dur': 0.13004785282596662}

train: {'loss': 2.062288284301758, 'top1': 0.40625, 'top5': 0.8125, 'learning_rate': 0.1, 'dur': 0.4566974639892578, 'data_load_dur': 0.0004951953887939453}

val: {'loss': 2.4474938610076906, 'top1': 0.394, 'top5': 0.673, 'dur': 0.1291487900314817}

train: {'loss': 2.055723190307617, 'top1': 0.53125, 'top5': 0.8125, 'learning_rate': 0.1, 'dur': 0.13810324668884277, 'data_load_dur': nan}

val: {'loss': 2.4184656631469728, 'top1': 0.4082, 'top5': 0.6946, 'dur': 0.1294168013675957}

train: {'loss': 2.3533172607421875, 'top1': 0.375, 'top5': 0.8125, 'learning_rate': 0.1, 'dur': 0.45335984230041504, 'data_load_dur': 0.0004496574401855469}

val: {'loss': 2.172774316215515, 'top1': 0.4536, 'top5': 0.7282, 'dur': 0.1295512618532606}

train: {'loss': 2.5977706909179688, 'top1': 0.3125, 'top5': 0.59375, 'learning_rate': 0.1, 'dur': 0.141495943069458, 'data_load_dur': nan}

val: {'loss': 2.30313663520813, 'top1': 0.4182, 'top5': 0.7042, 'dur': 0.1294141650959185}

train: {'loss': 2.4926202297210693, 'top1': 0.28125, 'top5': 0.71875, 'learning_rate': 0.1, 'dur': 0.4527568817138672, 'data_load_dur': 0.000431060791015625}

val: {'loss': 2.4672706562042235, 'top1': 0.408, 'top5': 0.6862, 'dur': 0.12953379807198884}

train: {'loss': 2.4973723888397217, 'top1': 0.40625, 'top5': 0.6875, 'learning_rate': 0.1, 'dur': 0.13939166069030762, 'data_load_dur': nan}

val: {'loss': 2.244011464881897, 'top1': 0.4616, 'top5': 0.743, 'dur': 0.1295521730070661}

train: {'loss': 2.07716703414917, 'top1': 0.46875, 'top5': 0.71875, 'learning_rate': 0.1, 'dur': 0.4548225402832031, 'data_load_dur': 0.00037407875061035156}

val: {'loss': 2.1781324069976806, 'top1': 0.4376, 'top5': 0.734, 'dur': 0.12911555114065765}

train: {'loss': 1.8815386295318604, 'top1': 0.5625, 'top5': 0.78125, 'learning_rate': 0.1, 'dur': 0.1385338306427002, 'data_load_dur': nan}

val: {'loss': 2.0344763345718384, 'top1': 0.4774, 'top5': 0.7594, 'dur': 0.12969719224674686}

train: {'loss': 1.742301106452942, 'top1': 0.53125, 'top5': 0.84375, 'learning_rate': 0.1, 'dur': 0.4559481143951416, 'data_load_dur': 0.00048661231994628906}

val: {'loss': 2.072212381362915, 'top1': 0.475, 'top5': 0.7582, 'dur': 0.12911149650622325}

train: {'loss': 2.3410208225250244, 'top1': 0.40625, 'top5': 0.65625, 'learning_rate': 0.1, 'dur': 0.14454317092895508, 'data_load_dur': nan}

val: {'loss': 2.027213853931427, 'top1': 0.4798, 'top5': 0.7662, 'dur': 0.1291629448058499}

train: {'loss': 1.8838908672332764, 'top1': 0.53125, 'top5': 0.75, 'learning_rate': 0.1, 'dur': 0.45462751388549805, 'data_load_dur': 0.00045180320739746094}

val: {'loss': 2.1462454845428467, 'top1': 0.4722, 'top5': 0.7552, 'dur': 0.1292316290982969}

train: {'loss': 2.2216856479644775, 'top1': 0.375, 'top5': 0.625, 'learning_rate': 0.1, 'dur': 0.14457178115844727, 'data_load_dur': nan}

val: {'loss': 2.8605025619506836, 'top1': 0.3428, 'top5': 0.6256, 'dur': 0.12939965193438682}

train: {'loss': 1.8108398914337158, 'top1': 0.53125, 'top5': 0.84375, 'learning_rate': 0.1, 'dur': 0.4551076889038086, 'data_load_dur': 0.0004494190216064453}

val: {'loss': 2.0498121602058412, 'top1': 0.4832, 'top5': 0.7622, 'dur': 0.12923569891862807}

train: {'loss': 2.090546131134033, 'top1': 0.5625, 'top5': 0.6875, 'learning_rate': 0.1, 'dur': 0.13769173622131348, 'data_load_dur': nan}

val: {'loss': 2.301127256822586, 'top1': 0.4662, 'top5': 0.7276, 'dur': 0.12913423738661844}

train: {'loss': 2.1131832599639893, 'top1': 0.46875, 'top5': 0.75, 'learning_rate': 0.1, 'dur': 0.4543569087982178, 'data_load_dur': 0.0004048347473144531}

val: {'loss': 1.9664039852142334, 'top1': 0.5014, 'top5': 0.7806, 'dur': 0.12921338628052145}

train: {'loss': 2.2371020317077637, 'top1': 0.375, 'top5': 0.75, 'learning_rate': 0.1, 'dur': 0.14040660858154297, 'data_load_dur': nan}

val: {'loss': 1.82405021982193, 'top1': 0.5246, 'top5': 0.796, 'dur': 0.12924891368598695}

train: {'loss': 1.8610728979110718, 'top1': 0.46875, 'top5': 0.75, 'learning_rate': 0.1, 'dur': 0.4551048278808594, 'data_load_dur': 0.0003960132598876953}

val: {'loss': 2.047663456439972, 'top1': 0.4872, 'top5': 0.7626, 'dur': 0.12907708222699013}

train: {'loss': 1.9316154718399048, 'top1': 0.53125, 'top5': 0.8125, 'learning_rate': 0.1, 'dur': 0.13916850090026855, 'data_load_dur': nan}

val: {'loss': 1.9211287024497985, 'top1': 0.5076, 'top5': 0.7754, 'dur': 0.12926959535878174}

train: {'loss': 1.5037778615951538, 'top1': 0.625, 'top5': 0.84375, 'learning_rate': 0.1, 'dur': 0.4513382911682129, 'data_load_dur': 0.0003883838653564453}

val: {'loss': 1.9807294905662536, 'top1': 0.4956, 'top5': 0.7756, 'dur': 0.12907336168228442}

train: {'loss': 1.8853530883789062, 'top1': 0.5, 'top5': 0.75, 'learning_rate': 0.1, 'dur': 0.14216351509094238, 'data_load_dur': nan}

val: {'loss': 1.8398286513328552, 'top1': 0.5236, 'top5': 0.7978, 'dur': 0.12907674206290276}

train: {'loss': 1.549592137336731, 'top1': 0.5625, 'top5': 0.90625, 'learning_rate': 0.1, 'dur': 0.45391201972961426, 'data_load_dur': 0.0004258155822753906}

val: {'loss': 1.9609852619171142, 'top1': 0.5004, 'top5': 0.7758, 'dur': 0.1289578258611594}

train: {'loss': 1.793756127357483, 'top1': 0.5625, 'top5': 0.75, 'learning_rate': 0.1, 'dur': 0.14446544647216797, 'data_load_dur': nan}

val: {'loss': 2.0148440064907076, 'top1': 0.5012, 'top5': 0.7764, 'dur': 0.12954156717677026}

train: {'loss': 1.8633756637573242, 'top1': 0.5, 'top5': 0.84375, 'learning_rate': 0.1, 'dur': 0.45217347145080566, 'data_load_dur': 0.00042700767517089844}

val: {'loss': 1.8788197476387023, 'top1': 0.5226, 'top5': 0.7946, 'dur': 0.12943354381877145}

train: {'loss': 1.8539268970489502, 'top1': 0.5, 'top5': 0.875, 'learning_rate': 0.1, 'dur': 0.1380019187927246, 'data_load_dur': nan}

val: {'loss': 2.053845865058899, 'top1': 0.4812, 'top5': 0.7694, 'dur': 0.12946110014702863}

train: {'loss': 2.0978384017944336, 'top1': 0.4375, 'top5': 0.71875, 'learning_rate': 0.1, 'dur': 0.45157670974731445, 'data_load_dur': 0.0003771781921386719}

val: {'loss': 1.830790338420868, 'top1': 0.5278, 'top5': 0.7944, 'dur': 0.12917583307642846}

train: {'loss': 2.276883363723755, 'top1': 0.53125, 'top5': 0.6875, 'learning_rate': 0.1, 'dur': 0.1366724967956543, 'data_load_dur': nan}

val: {'loss': 1.9247758241653443, 'top1': 0.5072, 'top5': 0.7794, 'dur': 0.1294899700553554}

train: {'loss': 2.077502727508545, 'top1': 0.34375, 'top5': 0.84375, 'learning_rate': 0.1, 'dur': 0.4544551372528076, 'data_load_dur': 0.0004277229309082031}

val: {'loss': 1.8365977927207946, 'top1': 0.5228, 'top5': 0.8006, 'dur': 0.12890109894381965}

train: {'loss': 2.269219160079956, 'top1': 0.5, 'top5': 0.6875, 'learning_rate': 0.010000000000000002, 'dur': 0.14583516120910645, 'data_load_dur': nan}

val: {'loss': 2.1212581837058067, 'top1': 0.485, 'top5': 0.765, 'dur': 0.12951538517216968}

train: {'loss': 1.6844375133514404, 'top1': 0.5625, 'top5': 0.8125, 'learning_rate': 0.010000000000000002, 'dur': 0.4534950256347656, 'data_load_dur': 0.00021386146545410156}

val: {'loss': 1.2153614953517913, 'top1': 0.6658, 'top5': 0.8952, 'dur': 0.12899463799349062}

train: {'loss': 0.8978222012519836, 'top1': 0.71875, 'top5': 0.90625, 'learning_rate': 0.010000000000000002, 'dur': 0.1355152130126953, 'data_load_dur': nan}

val: {'loss': 1.1790662175178528, 'top1': 0.682, 'top5': 0.8954, 'dur': 0.12884907813588525}

train: {'loss': 0.9879885315895081, 'top1': 0.75, 'top5': 0.9375, 'learning_rate': 0.010000000000000002, 'dur': 0.452852725982666, 'data_load_dur': 0.0002918243408203125}

val: {'loss': 1.1544481125354766, 'top1': 0.6894, 'top5': 0.8966, 'dur': 0.12888707628675328}

train: {'loss': 1.035630702972412, 'top1': 0.78125, 'top5': 0.90625, 'learning_rate': 0.010000000000000002, 'dur': 0.1388869285583496, 'data_load_dur': nan}

val: {'loss': 1.130808111667633, 'top1': 0.6964, 'top5': 0.9006, 'dur': 0.12907175197722806}

train: {'loss': 0.7930998206138611, 'top1': 0.75, 'top5': 0.96875, 'learning_rate': 0.010000000000000002, 'dur': 0.4513835906982422, 'data_load_dur': 0.0004277229309082031}

val: {'loss': 1.1113460647583009, 'top1': 0.6954, 'top5': 0.8984, 'dur': 0.12916032220147977}

train: {'loss': 0.6517642736434937, 'top1': 0.8125, 'top5': 0.96875, 'learning_rate': 0.010000000000000002, 'dur': 0.14054465293884277, 'data_load_dur': nan}

val: {'loss': 1.0854857010364531, 'top1': 0.7086, 'top5': 0.9026, 'dur': 0.12896275672183674}

train: {'loss': 1.0958365201950073, 'top1': 0.71875, 'top5': 0.875, 'learning_rate': 0.010000000000000002, 'dur': 0.4528007507324219, 'data_load_dur': 0.00038170814514160156}
